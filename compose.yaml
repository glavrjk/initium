networks:
  symfony_project:

services:
  server:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: server
    ports:
      - '80:80'
    working_dir: /var/www/html
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./:/var/www/html
      - ./docker/apache/vhost.conf:/etc/apache2/sites-available/000-default.conf
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/extra-php-config.ini
    depends_on:
      - database
    networks:
      - symfony_project

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
    depends_on:
      - database
    volumes:
      - db_admin_data:/var/www/html
    networks:
      - symfony_project

  ###> doctrine/doctrine-bundle ###
  database:
    container_name: database
    image: mysql:8.4.5
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/mysql:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/mysql:rw
    networks:
      - symfony_project
###< doctrine/doctrine-bundle ###

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
  db_admin_data:
###< doctrine/doctrine-bundle ###
